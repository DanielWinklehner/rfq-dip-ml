Start testing: Nov 30 10:16 EST
----------------------------------------------------------
1/23 Testing: ArrayReadAndWrite
1/23 Test: ArrayReadAndWrite
Command: "/home/loyd/ML_RFQ/build/cpp/tests/ArrayReadAndWrite/ArrayReadAndWrite"
Directory: /home/loyd/ML_RFQ/build/cpp/tests/ArrayReadAndWrite
"ArrayReadAndWrite" start time: Nov 30 10:16 EST
Output:
----------------------------------------------------------
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"ArrayReadAndWrite" end time: Nov 30 10:16 EST
"ArrayReadAndWrite" time elapsed: 00:00:00
----------------------------------------------------------

2/23 Testing: ArrayDelColumn
2/23 Test: ArrayDelColumn
Command: "/home/loyd/ML_RFQ/build/cpp/tests/ArrayDelColumn/ArrayDelColumn"
Directory: /home/loyd/ML_RFQ/build/cpp/tests/ArrayDelColumn
"ArrayDelColumn" start time: Nov 30 10:16 EST
Output:
----------------------------------------------------------
<end of output>
Test time =   0.13 sec
----------------------------------------------------------
Test Passed.
"ArrayDelColumn" end time: Nov 30 10:16 EST
"ArrayDelColumn" time elapsed: 00:00:00
----------------------------------------------------------

3/23 Testing: Array1DMiscTest
3/23 Test: Array1DMiscTest
Command: "/home/loyd/ML_RFQ/build/cpp/tests/Array1DMiscTest/Array1DMiscTest"
Directory: /home/loyd/ML_RFQ/build/cpp/tests/Array1DMiscTest
"Array1DMiscTest" start time: Nov 30 10:16 EST
Output:
----------------------------------------------------------

====================================================
n-dim double Array 
with n = 3
----------------------------------------------------
[( 0.314162, 1.89199, -0.288325, )]

====================================================
n-dim double Array 
with n = 3
----------------------------------------------------
[( 0.986967, 5.94387, -0.905797, )]
37.1242

====================================================
n-dim double Array 
with n = 2
----------------------------------------------------
[( 0.986967, -0.905797, )]

====================================================
n-dim double Array 
with n = 3
----------------------------------------------------
[( 0.986967, -0.905797, 1, )]
<end of output>
Test time =   0.01 sec
----------------------------------------------------------
Test Passed.
"Array1DMiscTest" end time: Nov 30 10:16 EST
"Array1DMiscTest" time elapsed: 00:00:00
----------------------------------------------------------

4/23 Testing: Array2DMiscTest
4/23 Test: Array2DMiscTest
Command: "/home/loyd/ML_RFQ/build/cpp/tests/Array2DMiscTest/Array2DMiscTest"
Directory: /home/loyd/ML_RFQ/build/cpp/tests/Array2DMiscTest
"Array2DMiscTest" start time: Nov 30 10:16 EST
Output:
----------------------------------------------------------

A : 
====================================================
mxn double Array 
with m = 3, and n = 3
----------------------------------------------------
    1   |   0.251707     0.42844    0.394551  
    2   |  0.0752099    0.567331    0.515472  
    3   |   0.416014   0.0973951    0.491487  

b = 

====================================================
n-dim double Array 
with n = 3
----------------------------------------------------
[( 1.0747, 1.15801, 1.0049, )]

Transpose:
====================================================
mxn double Array 
with m = 3, and n = 3
----------------------------------------------------
    1   |   0.251707   0.0752099    0.416014  
    2   |    0.42844    0.567331   0.0973951  
    3   |   0.394551    0.515472    0.491487  

A inverse:
====================================================
mxn double Array 
with m = 3, and n = 3
----------------------------------------------------
    1   |    5.27331    -3.97048  -0.0690071  
    2   |     4.0935   -0.932463    -2.30817  
    3   |   -5.27473     3.54556     2.55045  

least squares solution:

====================================================
n-dim double Array 
with n = 3
----------------------------------------------------
[( 1, 1, 1, )]

Q:
====================================================
mxn double Array 
with m = 3, and n = 3
----------------------------------------------------
    1   |  -0.511582   -0.380828    -0.77023  
    2   |   -0.15286   -0.841776    0.517732  
    3   |  -0.845528      0.3826    0.372424  

R:
====================================================
mxn double Array 
with m = 3, and n = 3
----------------------------------------------------
    1   |  -0.492017   -0.388255   -0.696206  
    2   |          0   -0.603465   -0.396125  
    3   |          0           0    0.146023  

U:
====================================================
mxn double Array 
with m = 3, and n = 3
----------------------------------------------------
    1   |  -0.562149  -0.0790178   -0.823253  
    2   |  -0.657391   -0.561305    0.502767  
    3   |  -0.501823    0.823829    0.263591  

S:

====================================================
n-dim double Array 
with n = 3
----------------------------------------------------
[( 1.11832, 0.399858, 0.096957, )]

VT:
====================================================
mxn double Array 
with m = 3, and n = 3
----------------------------------------------------
    1   |  -0.357414   -0.592567   -0.721886  
    2   |   0.701797   -0.680398    0.211043  
    3   |  -0.616227   -0.431188    0.659045  
<end of output>
Test time =   0.01 sec
----------------------------------------------------------
Test Passed.
"Array2DMiscTest" end time: Nov 30 10:16 EST
"Array2DMiscTest" time elapsed: 00:00:00
----------------------------------------------------------

5/23 Testing: ArraySortTest
5/23 Test: ArraySortTest
Command: "/home/loyd/ML_RFQ/build/cpp/tests/ArraySortTest/ArraySortTest"
Directory: /home/loyd/ML_RFQ/build/cpp/tests/ArraySortTest
"ArraySortTest" start time: Nov 30 10:16 EST
Output:
----------------------------------------------------------
====> Testing sort-by-column:
====> Sort-by-column test passed.
====> Testing sort-by-all:
====> Sort-by-all test passed.
0.119418 0.690648 0.969912 
0.162123 0.253952 0.912765 
0.162123 0.271934 0.385549 
0.162123 0.271934 0.571456 
0.162123 0.271934 0.922016 
0.174529 0.788409 0.0605175 
0.259898 0.47408 0.019994 
0.413736 0.394026 0.0079322 
0.514501 0.856529 0.985971 
0.640938 0.835503 0.248195 
<end of output>
Test time =   0.01 sec
----------------------------------------------------------
Test Passed.
"ArraySortTest" end time: Nov 30 10:16 EST
"ArraySortTest" time elapsed: 00:00:00
----------------------------------------------------------

6/23 Testing: MultiIndexTest
6/23 Test: MultiIndexTest
Command: "/home/loyd/ML_RFQ/build/cpp/tests/MultiIndexTest/MultiIndexTest"
Directory: /home/loyd/ML_RFQ/build/cpp/tests/MultiIndexTest
"MultiIndexTest" start time: Nov 30 10:16 EST
Output:
----------------------------------------------------------
====> Testing multiindex generation:
0 : 0 0 0  : 0
1 : 1 0 0  : 1
2 : 0 1 0  : 2
3 : 0 0 1  : 3
4 : 2 0 0  : 4
5 : 1 1 0  : 5
6 : 1 0 1  : 6
7 : 0 2 0  : 7
8 : 0 1 1  : 8
9 : 0 0 2  : 9
10 : 3 0 0  : 10
11 : 2 1 0  : 11
12 : 2 0 1  : 12
13 : 1 2 0  : 13
14 : 1 1 1  : 14
15 : 1 0 2  : 15
16 : 0 3 0  : 16
17 : 0 2 1  : 17
18 : 0 1 2  : 18
19 : 0 0 3  : 19
20 : 4 0 0  : 20
21 : 3 1 0  : 21
22 : 3 0 1  : 22
23 : 2 2 0  : 23
24 : 2 1 1  : 24
25 : 2 0 2  : 25
26 : 1 3 0  : 26
27 : 1 2 1  : 27
28 : 1 1 2  : 28
29 : 1 0 3  : 29
30 : 0 4 0  : 30
31 : 0 3 1  : 31
32 : 0 2 2  : 32
33 : 0 1 3  : 33
34 : 0 0 4  : 34
Growing an order
0 : 0 0 0 ; degree 0
1 : 1 0 0 ; degree 1
2 : 0 1 0 ; degree 1
3 : 0 0 1 ; degree 1
4 : 2 0 0 ; degree 2
5 : 1 1 0 ; degree 2
6 : 1 0 1 ; degree 2
7 : 0 2 0 ; degree 2
8 : 0 1 1 ; degree 2
9 : 0 0 2 ; degree 2
10 : 3 0 0 ; degree 3
11 : 2 1 0 ; degree 3
12 : 2 0 1 ; degree 3
13 : 1 2 0 ; degree 3
14 : 1 1 1 ; degree 3
15 : 1 0 2 ; degree 3
16 : 0 3 0 ; degree 3
17 : 0 2 1 ; degree 3
18 : 0 1 2 ; degree 3
19 : 0 0 3 ; degree 3
20 : 4 0 0 ; degree 4
21 : 3 1 0 ; degree 4
22 : 3 0 1 ; degree 4
23 : 2 2 0 ; degree 4
24 : 2 1 1 ; degree 4
25 : 2 0 2 ; degree 4
26 : 1 3 0 ; degree 4
27 : 1 2 1 ; degree 4
28 : 1 1 2 ; degree 4
29 : 1 0 3 ; degree 4
30 : 0 4 0 ; degree 4
31 : 0 3 1 ; degree 4
32 : 0 2 2 ; degree 4
33 : 0 1 3 ; degree 4
34 : 0 0 4 ; degree 4
35 : 5 0 0 ; degree 5
36 : 4 1 0 ; degree 5
37 : 4 0 1 ; degree 5
38 : 3 2 0 ; degree 5
39 : 3 1 1 ; degree 5
40 : 3 0 2 ; degree 5
41 : 2 3 0 ; degree 5
42 : 2 2 1 ; degree 5
43 : 2 1 2 ; degree 5
44 : 2 0 3 ; degree 5
45 : 1 4 0 ; degree 5
46 : 0 5 0 ; degree 5
47 : 1 3 1 ; degree 5
48 : 0 4 1 ; degree 5
49 : 1 2 2 ; degree 5
50 : 0 3 2 ; degree 5
51 : 1 1 3 ; degree 5
52 : 0 2 3 ; degree 5
53 : 1 0 4 ; degree 5
54 : 0 1 4 ; degree 5
55 : 0 0 5 ; degree 5
<end of output>
Test time =   0.01 sec
----------------------------------------------------------
Test Passed.
"MultiIndexTest" end time: Nov 30 10:16 EST
"MultiIndexTest" time elapsed: 00:00:00
----------------------------------------------------------

7/23 Testing: CorrTest
7/23 Test: CorrTest
Command: "/home/loyd/ML_RFQ/build/cpp/tests/CorrTest/CorrTest"
Directory: /home/loyd/ML_RFQ/build/cpp/tests/CorrTest
"CorrTest" start time: Nov 30 10:16 EST
Output:
----------------------------------------------------------
Testing implementation of distance correlation 
Set #1: 3.743458e-01
Set #2: 1.410412e-01
Set #3: 1.486339e-01
Set #4: 4.910511e-01
Set #5: 3.114285e-01
Set #6: 8.574414e-03
<end of output>
Test time =   4.33 sec
----------------------------------------------------------
Test Passed.
"CorrTest" end time: Nov 30 10:16 EST
"CorrTest" time elapsed: 00:00:04
----------------------------------------------------------

8/23 Testing: QuadLUTest
8/23 Test: QuadLUTest
Command: "/home/loyd/ML_RFQ/build/cpp/tests/QuadLUTest/QuadLUTest"
Directory: /home/loyd/ML_RFQ/build/cpp/tests/QuadLUTest
"QuadLUTest" start time: Nov 30 10:16 EST
Output:
----------------------------------------------------------
<end of output>
Test time =   0.01 sec
----------------------------------------------------------
Test Passed.
"QuadLUTest" end time: Nov 30 10:16 EST
"QuadLUTest" time elapsed: 00:00:00
----------------------------------------------------------

9/23 Testing: TMCMC2dTest
9/23 Test: TMCMC2dTest
Command: "/home/loyd/ML_RFQ/build/cpp/tests/TMCMC2dTest/TMCMC2dTest"
Directory: /home/loyd/ML_RFQ/build/cpp/tests/TMCMC2dTest
"TMCMC2dTest" start time: Nov 30 10:16 EST
Output:
----------------------------------------------------------
Samples read from prior_samples.dat
DBeta: 0.0154847 Wmean: 0.626342 Wstd: 0.313171 Cv: 0.5
Iteration 1 Beta= 0.0154847 wMean= 0.626342 Evid=   -0.467858
DBeta: 0.0429133 Wmean: 0.619942 Wstd: 0.309971 Cv: 0.5
Iteration 2 Beta= 0.0583979 wMean= 0.619942 Evid=   -0.945987
DBeta: 0.11929 Wmean: 0.593133 Wstd: 0.296566 Cv: 0.5
Iteration 3 Beta= 0.177688 wMean= 0.593133 Evid=   -1.46832
DBeta: 0.271943 Wmean: 0.565755 Wstd: 0.282878 Cv: 0.5
Iteration 4 Beta= 0.44963 wMean= 0.565755 Evid=   -2.03792
DBeta: 0.3 Wmean: 0.693362 Wstd: 0.227761 Cv: 0.328488
Iteration 5 Beta= 0.74963 wMean= 0.693362 Evid=   -2.40412
DBeta: 0.25037 Wmean: 0.795131 Wstd: 0.168204 Cv: 0.211543
Iteration 6 Beta= 1 wMean= 0.795131 Evid=   -2.63337
TMCMC Algorithm Done
Written the states 0 - 999 to the text file chain.dat
-0.00185832
0.000571265
0.010334
0.387979
<end of output>
Test time =   1.41 sec
----------------------------------------------------------
Test Passed.
"TMCMC2dTest" end time: Nov 30 10:16 EST
"TMCMC2dTest" time elapsed: 00:00:01
----------------------------------------------------------

10/23 Testing: MCMC2dTest
10/23 Test: MCMC2dTest
Command: "/home/loyd/ML_RFQ/build/cpp/tests/MCMC2dTest/MCMC2dTest"
Directory: /home/loyd/ML_RFQ/build/cpp/tests/MCMC2dTest
"MCMC2dTest" start time: Nov 30 10:16 EST
Output:
----------------------------------------------------------
0.00306829
0.0140694
0.010177
0.655943
<end of output>
Test time =   0.48 sec
----------------------------------------------------------
Test Passed.
"MCMC2dTest" end time: Nov 30 10:16 EST
"MCMC2dTest" time elapsed: 00:00:00
----------------------------------------------------------

11/23 Testing: MCMCRandomTest
11/23 Test: MCMCRandomTest
Command: "/home/loyd/ML_RFQ/build/cpp/tests/MCMCRandomTest/MCMCRandomTest"
Directory: /home/loyd/ML_RFQ/build/cpp/tests/MCMCRandomTest
"MCMCRandomTest" start time: Nov 30 10:16 EST
Output:
----------------------------------------------------------
L.eval(x) = -1
<end of output>
Test time =   0.01 sec
----------------------------------------------------------
Test Passed.
"MCMCRandomTest" end time: Nov 30 10:16 EST
"MCMCRandomTest" time elapsed: 00:00:00
----------------------------------------------------------

12/23 Testing: MCMCNestedTest
12/23 Test: MCMCNestedTest
Command: "/home/loyd/ML_RFQ/build/cpp/tests/MCMCNestedTest/MCMCNestedTest"
Directory: /home/loyd/ML_RFQ/build/cpp/tests/MCMCNestedTest
"MCMCNestedTest" start time: Nov 30 10:16 EST
Output:
----------------------------------------------------------
<end of output>
Test time =   0.04 sec
----------------------------------------------------------
Test Passed.
"MCMCNestedTest" end time: Nov 30 10:16 EST
"MCMCNestedTest" time elapsed: 00:00:00
----------------------------------------------------------

13/23 Testing: Deriv1dTest
13/23 Test: Deriv1dTest
Command: "/home/loyd/ML_RFQ/build/cpp/tests/Deriv1dTest/Deriv1dTest"
Directory: /home/loyd/ML_RFQ/build/cpp/tests/Deriv1dTest
"Deriv1dTest" start time: Nov 30 10:16 EST
Output:
----------------------------------------------------------

====================================================
n-dim double Array 
with n = 5
----------------------------------------------------
[( 0, 1, 3, 6, 10, )]
<end of output>
Test time =   0.01 sec
----------------------------------------------------------
Test Passed.
"Deriv1dTest" end time: Nov 30 10:16 EST
"Deriv1dTest" time elapsed: 00:00:00
----------------------------------------------------------

14/23 Testing: SecondDeriv1dTest
14/23 Test: SecondDeriv1dTest
Command: "/home/loyd/ML_RFQ/build/cpp/tests/SecondDeriv1dTest/SecondDeriv1dTest"
Directory: /home/loyd/ML_RFQ/build/cpp/tests/SecondDeriv1dTest
"SecondDeriv1dTest" start time: Nov 30 10:16 EST
Output:
----------------------------------------------------------
====================================================
multi-indices(i,j), with i = 0 ... P, j = 1 ... nDim
with P = 34, and nDim = 3
----------------------------------------------------
i\j | 1  2  3  
---------------
0   | 0  0  0  
1   | 1  0  0  
2   | 0  1  0  
3   | 0  0  1  
4   | 2  0  0  
5   | 1  1  0  
6   | 1  0  1  
7   | 0  2  0  
8   | 0  1  1  
9   | 0  0  2  
10   | 3  0  0  
11   | 2  1  0  
12   | 2  0  1  
13   | 1  2  0  
14   | 1  1  1  
15   | 1  0  2  
16   | 0  3  0  
17   | 0  2  1  
18   | 0  1  2  
19   | 0  0  3  
20   | 4  0  0  
21   | 3  1  0  
22   | 3  0  1  
23   | 2  2  0  
24   | 2  1  1  
25   | 2  0  2  
26   | 1  3  0  
27   | 1  2  1  
28   | 1  1  2  
29   | 1  0  3  
30   | 0  4  0  
31   | 0  3  1  
32   | 0  2  2  
33   | 0  1  3  
34   | 0  0  4  

====================================================
n-dim double Array 
with n = 3
----------------------------------------------------
[( 1, 6, 3, )]
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"SecondDeriv1dTest" end time: Nov 30 10:16 EST
"SecondDeriv1dTest" time elapsed: 00:00:00
----------------------------------------------------------

15/23 Testing: GradHessianTest
15/23 Test: GradHessianTest
Command: "/home/loyd/ML_RFQ/build/cpp/tests/GradHessianTest/GradHessianTest"
Directory: /home/loyd/ML_RFQ/build/cpp/tests/GradHessianTest
"GradHessianTest" start time: Nov 30 10:16 EST
Output:
----------------------------------------------------------

====================================================
n-dim double Array 
with n = 2
----------------------------------------------------
[( 5.5, 6, )]
====================================================
mxn double Array 
with m = 2, and n = 2
----------------------------------------------------
    1   |          0           6  
    2   |          6           3  

====================================================
n-dim double Array 
with n = 3
----------------------------------------------------
[( 26, 13, 18, )]
====================================================
mxn double Array 
with m = 3, and n = 3
----------------------------------------------------
    1   |          0          13          18  
    2   |         13           0           9  
    3   |         18           9           6  
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"GradHessianTest" end time: Nov 30 10:16 EST
"GradHessianTest" time elapsed: 00:00:00
----------------------------------------------------------

16/23 Testing: GradientPCETest
16/23 Test: GradientPCETest
Command: "/home/loyd/ML_RFQ/build/cpp/tests/GradientPCETest/GradientPCETest"
Directory: /home/loyd/ML_RFQ/build/cpp/tests/GradientPCETest
"GradientPCETest" start time: Nov 30 10:16 EST
Output:
----------------------------------------------------------

====================================================
n-dim double Array 
with n = 2
----------------------------------------------------
[( 5.5, 6, )]
====================================================
mxn double Array 
with m = 2, and n = 2
----------------------------------------------------
    1   |          0           6  
    2   |          6           3  

====================================================
n-dim double Array 
with n = 3
----------------------------------------------------
[( 26, 13, 18, )]
====================================================
mxn double Array 
with m = 3, and n = 3
----------------------------------------------------
    1   |          0          13          18  
    2   |         13           0           9  
    3   |         18           9           6  
<end of output>
Test time =   0.01 sec
----------------------------------------------------------
Test Passed.
"GradientPCETest" end time: Nov 30 10:16 EST
"GradientPCETest" time elapsed: 00:00:00
----------------------------------------------------------

17/23 Testing: PCE1dTest
17/23 Test: PCE1dTest
Command: "/home/loyd/ML_RFQ/build/cpp/tests/PCE1dTest/PCE1dTest"
Directory: /home/loyd/ML_RFQ/build/cpp/tests/PCE1dTest
"PCE1dTest" start time: Nov 30 10:16 EST
Output:
----------------------------------------------------------
error at the quadrature points: 1.8169e-13
<end of output>
Test time =   0.01 sec
----------------------------------------------------------
Test Passed.
"PCE1dTest" end time: Nov 30 10:16 EST
"PCE1dTest" time elapsed: 00:00:00
----------------------------------------------------------

18/23 Testing: PCEImplTest
18/23 Test: PCEImplTest
Command: "/home/loyd/ML_RFQ/build/cpp/tests/PCEImplTest/PCEImplTest"
Directory: /home/loyd/ML_RFQ/build/cpp/tests/PCEImplTest
"PCEImplTest" start time: Nov 30 10:16 EST
Output:
----------------------------------------------------------
Testing PC implementations: 
====> Testing norm computation: 
====> Norm computation test passed.
ISP tests not implemented yet. 
<end of output>
Test time =   0.04 sec
----------------------------------------------------------
Test Passed.
"PCEImplTest" end time: Nov 30 10:16 EST
"PCEImplTest" time elapsed: 00:00:00
----------------------------------------------------------

19/23 Testing: PCELogTest
19/23 Test: PCELogTest
Command: "/home/loyd/ML_RFQ/build/cpp/tests/PCELogTest/PCELogTest"
Directory: /home/loyd/ML_RFQ/build/cpp/tests/PCELogTest
"PCELogTest" start time: Nov 30 10:16 EST
Output:
----------------------------------------------------------

======================================================================
Initialization
======================================================================

The number of PC terms in an expansion is 6
===================================================================
multi-indices(i,j), and \Psi^2(i) with i = 0 ... P, j = 1 ... nDim
with P = 5, and nDim = 1 (terms up to order 5)
-------------------------------------------------------------------
i\j | 1  \Psi^2
---------------
0   | 0  1
1   | 1  1
2   | 2  2
3   | 3  6
4   | 4  24
5   | 5  120

======================================================================
Computing Log(a)
======================================================================

PC coeffs for aa are :
  0: 4
  1: 0.5
  2: 0
  3: 0
  4: 0
  5: 0

Mean of aa is    : 4
Std Dev of aa is : 0.5

Computing the natural log with Taylor Series approach:
PC coeffs for c= ln(a) are (Array1D routine, Taylor Series):
  0: 1.37829
  1: 0.127053
  2: -0.00821092
  3: 0.000720328
  4: -7.21354e-05
  5: 7.29965e-06

Computing the natural log with Integration approach:
PC coeffs for c= ln(a) are (Array1D routine, Integration):
  0: 1.37829
  1: 0.127053
  2: -0.00821092
  3: 0.000720328
  4: -7.21354e-05
  5: 7.29967e-06

======================================================================
Assessing the difference between both approaches:
======================================================================

RMS difference between Integration and Taylor Series coefficients for Log(p): 1.28351e-11

======================================================================
The test was successful!
======================================================================

<end of output>
Test time =   0.01 sec
----------------------------------------------------------
Test Passed.
"PCELogTest" end time: Nov 30 10:16 EST
"PCELogTest" time elapsed: 00:00:00
----------------------------------------------------------

20/23 Testing: Hessian2dTest
20/23 Test: Hessian2dTest
Command: "/home/loyd/ML_RFQ/build/cpp/tests/Hessian2dTest/Hessian2dTest"
Directory: /home/loyd/ML_RFQ/build/cpp/tests/Hessian2dTest
"Hessian2dTest" start time: Nov 30 10:16 EST
Output:
----------------------------------------------------------
====================================================
multi-indices(i,j), with i = 0 ... P, j = 1 ... nDim
with P = 9, and nDim = 2
----------------------------------------------------
i\j | 1  2  
------------
0   | 0  0  
1   | 1  0  
2   | 0  1  
3   | 2  0  
4   | 1  1  
5   | 0  2  
6   | 3  0  
7   | 2  1  
8   | 1  2  
9   | 0  3  
====================================================
multi-indices(i,j), with i = 0 ... P, j = 1 ... nDim
with P = 9, and nDim = 2
----------------------------------------------------
i\j | 1  2  
------------
0   | 0  0  
1   | 1  0  
2   | 0  1  
3   | 2  0  
4   | 1  1  
5   | 0  2  
6   | 3  0  
7   | 2  1  
8   | 1  2  
9   | 0  3  
9.92539e-14
1.38556e-13
1.49197e-14
====================================================
mxn double Array 
with m = 2, and n = 2
----------------------------------------------------
    1   |   -1.41421  1.49197e-14  
    2   | 1.49197e-14    -1.73205  
<end of output>
Test time =   0.01 sec
----------------------------------------------------------
Test Passed.
"Hessian2dTest" end time: Nov 30 10:16 EST
"Hessian2dTest" time elapsed: 00:00:00
----------------------------------------------------------

21/23 Testing: BCS1dTest
21/23 Test: BCS1dTest
Command: "/home/loyd/ML_RFQ/build/cpp/tests/BCS1dTest/BCS1dTest"
Directory: /home/loyd/ML_RFQ/build/cpp/tests/BCS1dTest
"BCS1dTest" start time: Nov 30 10:16 EST
Output:
----------------------------------------------------------
Iteration # 0
BCS algorithm converged, # iterations : 5 

====================================================
n-dim double Array 
with n = 5
----------------------------------------------------
[( 0.785397, -0.353987, 0.0829454, -0.0172588, 0.00316972, )]

====================================================
n-dim integer Array 
with n = 5
----------------------------------------------------
[( 0, 2, 4, 6, 8, )]

====================================================
n-dim double Array 
with n = 5
----------------------------------------------------
[( 2.73332e-05, 5.4007e-05, 7.32482e-05, 8.80961e-05, 9.33121e-05, )]
2.14225e-07
5.54259e-08
5.19604e-09
0
0
0
<end of output>
Test time =   0.00 sec
----------------------------------------------------------
Test Passed.
"BCS1dTest" end time: Nov 30 10:16 EST
"BCS1dTest" time elapsed: 00:00:00
----------------------------------------------------------

22/23 Testing: BCS2dTest
22/23 Test: BCS2dTest
Command: "/home/loyd/ML_RFQ/build/cpp/tests/BCS2dTest/BCS2dTest"
Directory: /home/loyd/ML_RFQ/build/cpp/tests/BCS2dTest
"BCS2dTest" start time: Nov 30 10:16 EST
Output:
----------------------------------------------------------
Iteration # 0
BCS algorithm converged, # iterations : 6 

====================================================
n-dim double Array 
with n = 5
----------------------------------------------------
[( 1.6, 1, 0.666667, -0.666667, 0.4, )]

====================================================
n-dim integer Array 
with n = 5
----------------------------------------------------
[( 1, 2, 0, 5, 6, )]
====================================================
mxn integer Array 
with m = 10, and n = 2
----------------------------------------------------
    1   |          0           0  
    2   |          1           0  
    3   |          0           1  
    4   |          2           0  
    5   |          1           1  
    6   |          0           2  
    7   |          3           0  
    8   |          2           1  
    9   |          1           2  
   10   |          0           3  

====================================================
n-dim double Array 
with n = 10
----------------------------------------------------
[( 0.666667, 1.6, 1, 0, 0, -0.666667, 0.4, 0, 0, 0, )]
<end of output>
Test time =   0.01 sec
----------------------------------------------------------
Test Passed.
"BCS2dTest" end time: Nov 30 10:16 EST
"BCS2dTest" time elapsed: 00:00:00
----------------------------------------------------------

23/23 Testing: LowRankRegrTest
23/23 Test: LowRankRegrTest
Command: "/home/loyd/ML_RFQ/build/cpp/tests/LowRankRegrTest/LowRankRegrTest"
Directory: /home/loyd/ML_RFQ/build/cpp/tests/LowRankRegrTest
"LowRankRegrTest" start time: Nov 30 10:16 EST
Output:
----------------------------------------------------------
Norm of the error for rank 1 approximation = 6.626666e-03
Norm of the error for rank 2 approximation = 3.332910e-13
<end of output>
Test time =   0.01 sec
----------------------------------------------------------
Test Passed.
"LowRankRegrTest" end time: Nov 30 10:16 EST
"LowRankRegrTest" time elapsed: 00:00:00
----------------------------------------------------------

End testing: Nov 30 10:16 EST
